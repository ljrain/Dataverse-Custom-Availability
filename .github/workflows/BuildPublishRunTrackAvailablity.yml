# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build Publish Run Track Availablity

on:
   schedule:
   - cron: '*/30 * * * *'  # Every 30 minutes
   workflow_dispatch:
      inputs:
         branch:
           description: 'Branch to check out'
           required: true
           default: 'master'
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build Tracker
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    - name: Set up environment variables
      run: |
        echo "DVCONNECTIONSTRING=${{ env.DVCONNECTIONSTRING }}" >> $GITHUB_ENV
        echo "AICONNECTIONSTRING=${{ env.AICONNECTIONSTRING }}" >> $GITHUB_ENV      

    - name: Find the executable
      id: find-executable-withconnections
      shell: bash
      run: |
       set -e  # Exit immediately if a command exits with a non-zero status
       if [ -z "$DVCONNECTIONSTRING" ] || [ -z "$AICONNECTIONSTRING" ]; then
         echo "ARG_ERROR: Please provide the connection strings for Dataverse and Application Insights as an argument. (arg 1 = Dataverse, arg 2 = App Insights)"
         exit 1
       fi
       echo "DVCONNECTIONSTRING: $DVCONNECTIONSTRING"
       echo "AICONNECTIONSTRING: $AICONNECTIONSTRING"
       cd D:\a\\Dataverse-Custom-Availability\\Dataverse-Custom-Availability\bin\Release || { echo "Failed to change directory"; exit 1; }
       dir || { echo "Failed to list directory contents"; exit 1; }
       if [ -f "./TrackAvailability.exe" ]; then
         ./TrackAvailability.exe $DVCONNECTIONSTRING $AICONNECTIONSTRING || { echo "Failed to execute TrackAvailability.exe"; exit 1; }
       else
         echo "TrackAvailability.exe not found"
         exit 1
       fi

    
    - name: Find the executable
      id: find-executable
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: |
         echo $DVCONNECTIONSTRING
         echo $AICONNECTIONSTRING
         cd D:\a\\Dataverse-Custom-Availability\\Dataverse-Custom-Availability\bin\Release
         dir
         .\TrackAvailability.exe $DVCONNECTIONSTRING $AICONNECTIONSTRING
         

    - name: Publish Artifact
      uses: actions/upload-artifact@v4
      with:
         name: TrackAvailability
         path: D:\a\\Dataverse-Custom-Availability\\Dataverse-Custom-Availability\bin\Release
  

      
